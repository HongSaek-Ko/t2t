<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.t2t.prd.repository.ProductMapper">

    <insert id="write"> <!--prdId, hit, datetime 자동부여 / 현재 판매량은 작성 후 증가 / 판매상태, 중단사유는 수정 시 부여-->
        <selectKey resultType="long" keyProperty="prdId" order="AFTER">
            SELECT MAX(PRDID) AS PRDID FROM PRD
        </selectKey>
        INSERT INTO PRD(TITLE, USRID, CONT, TRGTSALQTY, ISLIMIT, CATE, PRICE)
        VALUES(#{title}, #{usrId}, #{cont}, #{trgtSalQty}, #{islimit}, #{cate}, #{price})
    </insert>

    <select id="findByPrdId" resultType="org.t2t.prd.dto.ProductDTO">
        SELECT * FROM PRD
        WHERE PRDID=#{prdId}
    </select>

    <update id="modify">
        UPDATE PRD
        SET TITLE=#{title}, CONT=#{cont}, CATE=#{cate}, TRGTSALQTY=#{trgtSalQty}, ISLIMIT=#{islimit}, SALSTAT=#{salStat}, ABTREAS=#{abtReas}
        WHERE PRDID=#{prdId}
    </update>

    <!--게시글 조회: prdId 주고 해시태그(tagId) 가져오기-->
    <select id="getPrdHash" resultType="org.t2t.prd.dto.PrdHashDTO">
        SELECT PH.TAGID
        FROM PRD P
        INNER JOIN PRDHASH PH ON P.PRDID = PH.PRDID
        INNER JOIN HASH H ON PH.TAGID = H.TAGID
        WHERE P.PRDID = #{prdId}
    </select>

    <select id="getTagId">
        SELECT TAGID FROM HASH
        WHERE TAGID
        LIKE CONCAT('%', 't', '%') AND ENABLED = 'Y';
    </select>

    <select id="getAllTagId" resultType="org.t2t.prd.dto.HashDTO">
        SELECT TAGID FROM HASH
        WHERE ENABLED = 'Y';
    </select>

    <!--  서비스에서 넘어옴      HashMap 타입의 객체를 매개변수로 받았으므로... 쿼리 결과를 GoodDTO 타입으로 변환-->
    <select id="findGoodById" parameterType="hashmap" resultType="org.t2t.prd.dto.GoodDTO">
        SELECT G.* FROM
            PRD R LEFT OUTER JOIN GOOD G
        ON R.PRDID = G.PRDID <!--테이블 결합 조건. PRD / GOOD 테이블의 PRDID가 일치하는 것만 결합 -->
        WHERE
            G.USRID = #{usrId} <!--매개변수로 전달된 usrId 값과 일치하는 USRID 데이터를 선택; 어떤 사용자가 '좋아요' 누른 것만 조회 -->
    </select>

    <!--'좋아요'를 눌렀다는 정보(데이터)를 삭제; 넘어온 매개변수와 일치하는 레코드를 삭제...-->
    <delete id="deleteGood" parameterType="hashmap" > <!--HashMap 타입의 객체를 매개변수로 보냈으니까...-->
        DELETE FROM GOOD
        WHERE
            PRDID = #{prdId} AND
            USRID = #{usrId}
    </delete>

    <!--'좋아요'를 눌렀다는 정보(데이터)를 저장-->
    <insert id="insertGood" parameterType="hashmap" >
        INSERT INTO GOOD (prdId, usrId)
        VALUES (#{prdId}, #{usrId})
    </insert>

    <!--게시글 삭제-->
    <delete id="deleteProduct">
        DELETE FROM PRD
        WHERE PRDID=#{prdId}
    </delete>

    <!--좋아요 수 계산, 동일한 PRDID의 칼럼수로 계산-->
    <select id="goodCount" resultType="int">
        SELECT COUNT(*) FROM GOOD
        WHERE PRDID=#{prdId}
    </select>

    <!--게시글 조회수 증가-->
    <update id="updateProductHit">
        UPDATE PRD SET HIT=HIT+1
        WHERE PRDID=#{prdId}
    </update>

<!--    &lt;!&ndash;게시글 목록 조회&ndash;&gt;-->
<!--    <select id="getProductList" resultType="org.t2t.prd.dto.ProductDTO">-->
<!--        SELECT * FROM PRD-->
<!--    </select>-->

    <!--게시글 목록 + 페이징 처리--> <!--검색도 추가 해야함..-->
    <select id="getPrdListWithPaging" resultType="org.t2t.prd.dto.ProductDTO">
        SELECT * FROM PRD
        ORDER BY PRDID DESC LIMIT #{offset}, #{size}
    </select>

    <select id="countAllProduct" resultType="long">
        SELECT COUNT(*) FROM PRD
    </select>


</mapper>